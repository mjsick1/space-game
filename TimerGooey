import java.awt.*;
import java.awt.event.ActionListener;
import java.awt.event.*;
import javax.swing.*;

public class TimerGooey implements ActionListener{

    JFrame frame = new JFrame();
    JButton startButton = new JButton("Start");
    JButton resetButton = new JButton("Refuel");
    JLabel timeLabel = new JLabel();
    int elapsedTime = 0;
    int seconds = 0;
    boolean started = false;
    String seconds_string = String.format("%02d",seconds);

    Timer timer = new Timer(1000, new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            elapsedTime+=1000;
            seconds = (elapsedTime/1000) % 60;
            seconds_string = String.format("%02d",seconds);
            timeLabel.setText(seconds_string+"");
        }
    });


    TimerGooey(){
        timeLabel.setText(seconds_string);
        timeLabel.setBounds(100,100,200,100);
        timeLabel.setFont(new Font("Verdana",Font.PLAIN,30));
        timeLabel.setBorder(BorderFactory.createBevelBorder(1));
        timeLabel.setOpaque(true);
        timeLabel.setHorizontalAlignment(JTextField.CENTER);

        /////START
        startButton.setBounds(100,200,100,50);
        startButton.setFocusable(false);
        startButton.addActionListener(this);

        //////RESET         this action should instead work as a collider (when player collides with object, resets the time)
        resetButton.setBounds(200,200,100,50);
        resetButton.setFocusable(false);
        resetButton.addActionListener(this);

        frame.add(startButton);
        frame.add(resetButton);
        frame.add(timeLabel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(450,450);
        frame.setLayout(null);
        frame.setVisible(true);
    }

    @Override
    public void actionPerformed(ActionEvent e) {

        if (e.getSource()==startButton){ //instead of a start button the timer would start on launch
            start();
        }

        if(e.getSource()==resetButton){ //Instead of reset button the player would hit a fuel object and regain fuel
            System.out.println("You have gained fuel");
            reset();
        }
    }

    void start(){
        timer.start();
    } //Starts when game starts

    void stop(){  //No real need to stop

    }

    void reset(){
        elapsedTime=0;
        seconds =0;
        seconds_string = String.format("%02d",seconds);
        timeLabel.setText(seconds_string+"");
    }
}

/*The idea is that the spaceship is flying around, and we could have 2 different options
1. The timer starts as soon as the game does, and you fly around until it ends and that stops the game or you "die"

2. The same thing but there are objects that when you collide with them, it resets the timer. i.e. you get more fuel
 */
